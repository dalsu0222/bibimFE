{"ast":null,"code":"import { ref } from 'vue';\nimport WritePage from '@/views/routine-write.vue';\nconst __default__ = {\n  data: () => ({\n    cards: ['Today', 'Yesterday'],\n    drawer: null,\n    links: [['mdi-inbox-arrow-down', 'HOME'], ['mdi-send', '루틴 공유'], ['mdi-delete', '루틴 작성'], ['mdi-alert-octagon', '내 루틴 보관함'], ['mdi-alert-octagon', '설정']],\n    // textInput: \"\",\n    titleInput: \"\",\n    expInput: \"\"\n  }),\n  components: {\n    'WritePage': WritePage\n  },\n  methods: {\n    searchBarInput() {\n      console.log(this.titleInput); // Log the entered text to the console\n    },\n\n    ExplanationInput() {\n      console.log(this.expInput);\n    }\n  }\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  __name: 'routine-write',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const cards = ['루틴 작성', '최신 게시글'];\n    const links = [['mdi-inbox-arrow-down', 'HOME'], ['mdi-send', '루틴 공유'], ['mdi-delete', '루틴 작성'], ['mdi-alert-octagon', '내 루틴 보관함'], ['mdi-alert-octagon', '설정']];\n    const drawer = ref(null);\n    const submitData = () => {\n      const postData = {\n        title: titleInput,\n        explanation: expInput\n        // ... other properties ...\n      };\n\n      // Assuming you have an API endpoint for data submission\n      // Replace 'your_api_endpoint' with the actual URL\n      fetch('your_api_endpoint', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      }).then(response => response.json()).then(data => {\n        // Handle success response from the server if needed\n        console.log('Data successfully submitted:', data);\n      }).catch(error => {\n        // Handle error if data submission fails\n        console.error('Error submitting data:', error);\n      });\n    };\n    const __returned__ = {\n      cards,\n      links,\n      drawer,\n      submitData,\n      ref,\n      WritePage\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["ref","WritePage","__default__","data","cards","drawer","links","titleInput","expInput","components","methods","searchBarInput","console","log","ExplanationInput","submitData","postData","title","explanation","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error"],"sources":["C:/Users/82105/OneDrive/문서/routine-write-page/src/views/routine-write.vue"],"sourcesContent":["<template>\r\n    <v-app id=\"inspire\">\r\n\r\n        <v-main style=\"background-color: #3B4048;\">\r\n            <v-container class=\"px-2 py-2\" fluid>\r\n                <v-card class=\"right-panel-hot\">\r\n\r\n                    <v-list lines=\"two\" style=\"background-color: #181B21;\">\r\n                        <v-list-subheader class=\"right-panel-hot-classify-text\" style=\"margin: 35px;\">\r\n                            <b>루틴 작성</b>\r\n                        </v-list-subheader>\r\n                        <input class=\"search-bar\" v-model=\"titleInput\" placeholder=\"제목\" @keyup.enter=\"searchBarInput\">\r\n                        <div class=\"routine-add-container\">\r\n\r\n\r\n                        </div>\r\n                        <div class=\"routine-end-container\">\r\n                            <input class=\"explanation-bar\" v-model=\"expInput\" placeholder=\"설명\"\r\n                                @keyup.enter=\"ExplanationInput\">\r\n\r\n                            <v-btn class=\"r-submit-button\" color=\"#CD4444\" @click=\"submitData\">작성 완료</v-btn>\r\n                            <!-- Add this button -->\r\n                        </div>\r\n\r\n                    </v-list>\r\n                </v-card>\r\n\r\n                <div style=\"height: 8px;\"></div>\r\n\r\n                <v-card class=\"right-panel-new\">\r\n                    <!-- <v-list lines=\"two\" style=\"background-color: #181B21;\">\r\n\r\n                        <div style=\"height: 20px;\"></div>\r\n\r\n                        <v-list-subheader class=\"right-panel-hot-classify-text\" style=\"margin-left: 35px;\">\r\n                            <b>최신 게시글</b>\r\n                        </v-list-subheader>\r\n\r\n                        <div style=\"height: 20px;\"></div>\r\n\r\n                        <template v-for=\"n in 6\" :key=\"n\">\r\n                            <v-list-item\r\n                                style=\"background-color: #1D2128; color: #FFFFFF; margin: 5px; border-radius: 20px; width:99%\">\r\n\r\n                                <div style=\"display: flex;\">\r\n                                    <v-list-item-title class=\"right-panel-new-title\">\r\n                                        <v-avatar class=\"right-panel-new-avatar\"></v-avatar>\r\n                                        <b style=\"margin-left:8px;\">{{ n }}번째 제목</b>\r\n                                    </v-list-item-title>\r\n                                </div>\r\n\r\n                                <div style=\"height: 10px;\"></div>\r\n\r\n                                <div class=\"right-panel-new-content\">\r\n                                    <v-list-item-subtitle>\r\n                                        <br>~ 루틴 보여주는 곳 ~<br>\r\n                                    </v-list-item-subtitle>\r\n                                </div>\r\n\r\n                            </v-list-item>\r\n\r\n                        </template>\r\n                    </v-list> -->\r\n                </v-card>\r\n            </v-container>\r\n        </v-main>\r\n    </v-app>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport WritePage from '@/views/routine-write.vue'\r\n\r\nconst cards = ['루틴 작성', '최신 게시글']\r\nconst links = [\r\n    ['mdi-inbox-arrow-down', 'HOME'],\r\n    ['mdi-send', '루틴 공유'],\r\n    ['mdi-delete', '루틴 작성'],\r\n    ['mdi-alert-octagon', '내 루틴 보관함'],\r\n    ['mdi-alert-octagon', '설정'],\r\n]\r\n\r\nconst drawer = ref(null)\r\n\r\nconst submitData = () => {\r\n    const postData = {\r\n        title: titleInput,\r\n        explanation: expInput,\r\n        // ... other properties ...\r\n    };\r\n\r\n    // Assuming you have an API endpoint for data submission\r\n    // Replace 'your_api_endpoint' with the actual URL\r\n    fetch('your_api_endpoint', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(postData),\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // Handle success response from the server if needed\r\n            console.log('Data successfully submitted:', data);\r\n        })\r\n        .catch(error => {\r\n            // Handle error if data submission fails\r\n            console.error('Error submitting data:', error);\r\n        });\r\n}\r\n\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n    data: () => ({\r\n        cards: ['Today', 'Yesterday'],\r\n        drawer: null,\r\n        links: [\r\n            ['mdi-inbox-arrow-down', 'HOME'],\r\n            ['mdi-send', '루틴 공유'],\r\n            ['mdi-delete', '루틴 작성'],\r\n            ['mdi-alert-octagon', '내 루틴 보관함'],\r\n            ['mdi-alert-octagon', '설정']\r\n        ],\r\n        // textInput: \"\",\r\n        titleInput: \"\",\r\n        expInput: \"\",\r\n    }),\r\n    components: {\r\n        'WritePage': WritePage\r\n    },\r\n    methods: {\r\n        searchBarInput() {\r\n            console.log(this.titleInput); // Log the entered text to the console\r\n        },\r\n        ExplanationInput() {\r\n            console.log(this.expInput);\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.search-bar {\r\n    color: #FFFFFF;\r\n    border: 2px solid #3A4148;\r\n    background-color: #24272B;\r\n    border-radius: 20px;\r\n    width: 90%;\r\n    height: 60px;\r\n    text-indent: 10px;\r\n    margin: 10px 35px;\r\n}\r\n\r\n.explanation-bar {\r\n    color: #FFFFFF;\r\n    border: 2px solid #3A4148;\r\n    background-color: #24272B;\r\n    border-radius: 20px;\r\n    width: 900px;\r\n    height: 178px;\r\n    text-indent: 10px;\r\n    margin: 10px 35px;\r\n}\r\n\r\n.search-bar::placeholder {\r\n    font-size: 26px;\r\n    font-weight: bold;\r\n    text-align: left;\r\n    margin-right: 12px;\r\n    padding-top: 10px;\r\n}\r\n\r\n.explanation-bar::placeholder {\r\n    font-size: 26px;\r\n    font-weight: bold;\r\n    text-align: left;\r\n    margin-right: 12px;\r\n    padding-top: 10px;\r\n}\r\n\r\n.right-panel-hot-classify-text {\r\n    background-color: #181B21;\r\n    color: #FFFFFF;\r\n    font-size: 30px;\r\n    line-height: 30px;\r\n}\r\n\r\n.right-panel-hot {\r\n    background-color: #CC8484;\r\n    border-radius: 30px;\r\n}\r\n\r\n.right-panel-hot-title {\r\n    background-color: #CC8484;\r\n    border-radius: 20px;\r\n    align-items: center;\r\n    width: 12%;\r\n}\r\n\r\n.right-panel-hot-content {\r\n    background-color: #CC8484;\r\n    border-radius: 20px;\r\n    margin: auto;\r\n    height: 100px;\r\n    align-items: center;\r\n    text-align: center;\r\n}\r\n\r\n.right-panel-hot-avatar {\r\n    background-color: #FFFFFF;\r\n    margin: auto;\r\n    align-items: center;\r\n    text-align: center;\r\n}\r\n\r\n.right-panel-new {\r\n    background-color: #1D2128;\r\n    border-radius: 30px;\r\n}\r\n\r\n.right-panel-new-title {\r\n    background-color: #344054;\r\n    border-radius: 20px;\r\n    align-items: center;\r\n    width: 12%;\r\n}\r\n\r\n.right-panel-new-content {\r\n    background-color: #344054;\r\n    border-radius: 20px;\r\n    margin: auto;\r\n    height: 100px;\r\n    align-items: center;\r\n    text-align: center;\r\n}\r\n\r\n.right-panel-new-avatar {\r\n    background-color: #FFFFFF;\r\n    margin: auto;\r\n    align-items: center;\r\n    text-align: center;\r\n}\r\n\r\n.routine-end-container {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 13px;\r\n}\r\n\r\n.r-submit-button {\r\n    display: flex;\r\n    width: 275px;\r\n    padding: 68px;\r\n    margin: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n\r\n    border-radius: 20px;\r\n    color: #FFFFFF;\r\n}\r\n</style>"],"mappings":"AAsEA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AA4CjD,MAAAC,WAAA,GAAe;EACXC,IAAI,EAAEA,CAAA,MAAO;IACTC,KAAK,EAAE,CAAC,OAAO,EAAE,WAAW,CAAC;IAC7BC,MAAM,EAAE,IAAI;IACZC,KAAK,EAAE,CACH,CAAC,sBAAsB,EAAE,MAAM,CAAC,EAChC,CAAC,UAAU,EAAE,OAAO,CAAC,EACrB,CAAC,YAAY,EAAE,OAAO,CAAC,EACvB,CAAC,mBAAmB,EAAE,UAAU,CAAC,EACjC,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAC9B;IACD;IACAC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACd,CAAC,CAAC;EACFC,UAAU,EAAE;IACR,WAAW,EAAER;EACjB,CAAC;EACDS,OAAO,EAAE;IACLC,cAAcA,CAAA,EAAG;MACbC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,UAAU,CAAC,CAAC,CAAC;IAClC,CAAC;;IACDO,gBAAgBA,CAAA,EAAG;MACfF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,QAAQ,CAAC;IAC9B;EACJ;AACJ,CAAC;;;;;;;IApED,MAAMJ,KAAK,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC;IACjC,MAAME,KAAK,GAAG,CACV,CAAC,sBAAsB,EAAE,MAAM,CAAC,EAChC,CAAC,UAAU,EAAE,OAAO,CAAC,EACrB,CAAC,YAAY,EAAE,OAAO,CAAC,EACvB,CAAC,mBAAmB,EAAE,UAAU,CAAC,EACjC,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAC9B;IAED,MAAMD,MAAM,GAAGL,GAAG,CAAC,IAAI,CAAC;IAExB,MAAMe,UAAU,GAAGA,CAAA,KAAM;MACrB,MAAMC,QAAQ,GAAG;QACbC,KAAK,EAAEV,UAAU;QACjBW,WAAW,EAAEV;QACb;MACJ,CAAC;;MAED;MACA;MACAW,KAAK,CAAC,mBAAmB,EAAE;QACvBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;MACjC,CAAC,CAAC,CACGS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACtB,IAAI,IAAI;QACV;QACAS,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEV,IAAI,CAAC;MACrD,CAAC,CAAC,CACDyB,KAAK,CAACC,KAAK,IAAI;QACZ;QACAjB,OAAO,CAACiB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}